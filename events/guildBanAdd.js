exports.run = async (guild, user, discord, fs, config, keys, bot, resources) => {

    try {
        //Previene que continue la ejecuci√≥n si el servidor no es la Rep√∫blica Gamer
        if (guild.id !== `374945492133740544`) return;

        async function sendLogEmbed(executor, reason, time) {
            if (user.bot) {
                if (user.id === bot.user.id) return;

                const loggingEmbed = new discord.MessageEmbed()
                    .setColor(resources.orange)
                    .addField(`üì§ Auditor√≠a`, `El **BOT** <@${user.tag}> fue baneado del servidor`);

                await bot.channels.cache.get(config.loggingChannel).send(loggingEmbed)
            } else {
                const loggingEmbed = new discord.MessageEmbed()
                    .setColor(resources.red2)
                    .setAuthor(`${user.tag} ha sido BANEADO`, user.displayAvatarURL())
                    .addField(`Miembro`, `<@${user.id}>`, true)
                    .addField(`Moderador`, `<@${executor.id || 'Desconocido'}>`, true)
                    .addField(`Raz√≥n`, reason || 'Desconocida', true)
                    .addField(`Duraci√≥n`, time || 'Desconocida', true);

                await bot.channels.cache.get(config.loggingChannel).send(loggingEmbed)
            }
        }

        const fetchedLogs = await guild.fetchAuditLogs({
            limit: 1,
            type: 'MEMBER_BAN_ADD',
        });

        const banLog = fetchedLogs.entries.first();

        if (!banLog) {
            console.log(`${new Date().toLocaleString()} „Äã${user.tag} fue baneado en ${guild.name} pero no se encontr√≥ un registro de auditor√≠a que lo corrobore.`);
            return sendLogEmbed();
        } 
    
        let { executor, target, reason } = banLog;
        let time = '‚àû'
    
        if (target.id === user.id) {
            if (!reason) reason = `Indefinida`

            if (reason.includes('Duraci√≥n')) {
                time = reason.split('Duraci√≥n: ').pop().split(',')[0];
                reason = reason.split('Raz√≥n: ').pop();
            }

            console.log(`${new Date().toLocaleString()} „Äã${user.tag} fue baneado en ${guild.name} por ${executor.tag} durante ${time} por ${reason}.`);
            sendLogEmbed(executor, reason, time);
        } else {
            console.log(`${new Date().toLocaleString()} „Äã${user.tag} fue baneado de ${guild.name} pero la b√∫squeda de un registro en la auditor√≠a fue inconcluyente.`);
            sendLogEmbed();
        }

    } catch (e) {
        //Se muestra el error en el canal de depuraci√≥n
        let debuggEmbed = new discord.MessageEmbed()
            .setColor(resources.brown)
            .setTitle(`üìã Depuraci√≥n`)
            .setDescription(`Se declar√≥ un error durante la ejecuci√≥n de un evento`)
            .addField(`Evento:`, `guildBanAdd`, true)
            .addField(`Fecha:`, new Date().toLocaleString(), true)
            .addField(`Error:`, e.stack, true)
            .setFooter(new Date().toLocaleString(), resources.server.iconURL()).setTimestamp();
        
        //Se env√≠a el mensaje al canal de depuraci√≥n
        await bot.channels.cache.get(config.debuggingChannel).send(debuggEmbed);
    }
}
